<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f9e54522-3b21-4fe5-911b-c3ac885ffae2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/cache/CacheDistance.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/cutomer/ChangeAddressInfo.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/checkstyle-idea.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/checkstyle-idea.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/activeProducts.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/activeProducts.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/historyOrders.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/historyOrders.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/inactiveProduct.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/inactiveProduct.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/pendingOrders.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/pendingOrders.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/stock.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/stock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/users.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/users.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.log" beforeDir="false" afterPath="$PROJECT_DIR$/main.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/DebugTest.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/PizzaApp.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/DistanceClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/DistanceClient.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/data/Delivery.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/api/data/Delivery.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/client/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/client/Server.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/CommandCreator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/CommandCreator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/cutomer/ShowMainCustomer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/cutomer/ShowMainCustomer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/employee/orders/ProcessNextOrder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/command/employee/orders/ProcessNextOrder.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/OrderRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/OrderRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/UserRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/service/OrderService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/service/OrderService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/service/UserService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/CustomerInterface.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/CustomerInterfaceImpl.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/EmployeeInterface.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/EmployeeInterfaceImpl.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/UserInterface.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/ui/UserInterfaceImpl.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/utils/Singleton.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/utils/Singleton.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/PizzaApp.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/DistanceClient.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/DistanceClient.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/Main.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/data/Delivery.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/api/data/Delivery.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/client/Server.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/client/Server.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/command/employee/orders/ProcessNextOrder.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/command/employee/orders/ProcessNextOrder.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/OrderRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/OrderRepository.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/service/OrderService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/service/OrderService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/CustomerInterface.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/CustomerInterfaceImpl.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/EmployeeInterface.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/EmployeeInterfaceImpl.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/UserInterface.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/ui/UserInterfaceImpl.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/utils/Singleton.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/utils/Singleton.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2sfW27PwLBLRGqzib75zUYtNIdh" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.A.executor": "Run",
    "Application.Client.executor": "Run",
    "Application.Main.executor": "Run",
    "Application.ProcessNextOrder.executor": "Run",
    "Application.ProductRepository.executor": "Run",
    "Application.Server.executor": "Run",
    "Application.com.deliciouspizza.command.employee.orders.ProcessNextOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.executor": "Coverage",
    "JUnit.OrderRepositoryTest.testAddOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testAddProductToActiveOrderWithInactiveOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testAddProductToActiveOrderWithInactiveProduct.executor": "Run",
    "JUnit.OrderRepositoryTest.testFinalizeOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testFinalizeOrderWithEmptyOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testFinalizeOrderWithInactiveOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testFinalizeRepeatedOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testFinalizeRepeatedOrderWithNullOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetCountOrderInPeriod.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetCurrentOrderForUserWithInactiveOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetHistoryOrdersWithEmptyHistory.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetProfitInPeriod.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetTotalPriceOfOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testGetTotalPriceOfOrderWithInactiveOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testLoadHistoryOrders.executor": "Debug",
    "JUnit.OrderRepositoryTest.testLoadHistoryOrdersWithException.executor": "Debug",
    "JUnit.OrderRepositoryTest.testLoadPendingOrdersWithEmptyFile.executor": "Run",
    "JUnit.OrderRepositoryTest.testLoadPendingOrdersWithException.executor": "Run",
    "JUnit.OrderRepositoryTest.testRemoveFromCurrentOrderForUserWithInactiveOrder.executor": "Run",
    "JUnit.OrderRepositoryTest.testRemoveFromCurrentOrderForUserWithNonExcistingProduct.executor": "Run",
    "JUnit.OrderRepositoryTest.testShutdown.executor": "Run",
    "JUnit.OrderRepositoryTest.testStartNewOrderWithAlreadyActiveOrder.executor": "Run",
    "JUnit.OrderServiceTest.executor": "Coverage",
    "JUnit.OrderServiceTest.testAddProductToActiveOrder.executor": "Run",
    "JUnit.OrderServiceTest.testAddProductToActiveOrder_AgeRestriction.executor": "Run",
    "JUnit.OrderServiceTest.testFinalizeRepeatedOrder.executor": "Run",
    "JUnit.OrderServiceTest.testGetCurrentOrderForUser.executor": "Run",
    "JUnit.OrderServiceTest.testGetCurrentOrderForUserWithInactiveOrderForUser.executor": "Run",
    "JUnit.OrderServiceTest.testGetTotalPriceOfOrderForCustomer.executor": "Run",
    "JUnit.OrderServiceTest.testProcessCurrentOrder.executor": "Run",
    "JUnit.OrderServiceTest.testProcessCurrentOrderWithWarning.executor": "Run",
    "JUnit.OrderServiceTest.testShowCurrentOrderForUser.executor": "Run",
    "JUnit.OrderServiceTest.testStartNewOrderWithCorrectUsername.executor": "Run",
    "JUnit.ProductRepositoryTest.executor": "Run",
    "JUnit.ProductRepositoryTest.testActivateProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testActivateProductWithAlreadyActiveProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testActivateProductWithNonExcistingProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testDeactivateProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testDeactivateProductWithNonExcistingProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testFilePathChange.executor": "Run",
    "JUnit.ProductRepositoryTest.testGetProductFromActiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testGetProductFromInactiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testGetProductWithNonExcistingProduct.executor": "Run",
    "JUnit.ProductRepositoryTest.testIOExceptionDuringLoadActiveProducts.executor": "Debug",
    "JUnit.ProductRepositoryTest.testIOExceptionDuringLoadInactiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomers.executor": "Run",
    "JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomersWhenNotInActiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomersWithAlcoholicDrink.executor": "Run",
    "JUnit.ProductRepositoryTest.testIsProductActive.executor": "Run",
    "JUnit.ProductRepositoryTest.testIsProductActiveWithFalseReturn.executor": "Run",
    "JUnit.ProductRepositoryTest.testLoadActiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testLoadActiveProductsWithEmptyFile.executor": "Debug",
    "JUnit.ProductRepositoryTest.testLoadInactiveProducts.executor": "Run",
    "JUnit.ProductRepositoryTest.testLoadInactiveProductsWithEmptyFile.executor": "Coverage",
    "JUnit.ProductRepositoryTest.testSavingProductWithException.executor": "Run",
    "JUnit.ProductServiceTest.executor": "Coverage",
    "JUnit.ProductServiceTest.testGetAllActiveProducts.executor": "Run",
    "JUnit.ProductServiceTest.testGetProductByKeyWithNonExistentProduct.executor": "Run",
    "JUnit.UserRepositoryTest.executor": "Coverage",
    "JUnit.UserRepositoryTest.testAddToOrderHistory.executor": "Run",
    "JUnit.UserRepositoryTest.testAddToOrderHistoryWithEmployee.executor": "Run",
    "JUnit.UserRepositoryTest.testAddToOrderHistoryWithNonExcistingUser.executor": "Run",
    "JUnit.UserRepositoryTest.testAddUser.executor": "Run",
    "JUnit.UserRepositoryTest.testGetAgeCustomer.executor": "Run",
    "JUnit.UserRepositoryTest.testGetAgeCustomerWithEmployee.executor": "Run",
    "JUnit.UserRepositoryTest.testGetAgeCustomerWithNonExcistingUser.executor": "Run",
    "JUnit.UserRepositoryTest.testGetOrderHistory.executor": "Debug",
    "JUnit.UserRepositoryTest.testGetOrderHistoryWithEmployee.executor": "Run",
    "JUnit.UserRepositoryTest.testGetOrderHistoryWithNonExcistingUser.executor": "Run",
    "JUnit.UserRepositoryTest.testGetUserByUsername.executor": "Run",
    "JUnit.UserRepositoryTest.testGetUserByUsernameWithNonExcistingUser.executor": "Run",
    "JUnit.UserRepositoryTest.testLoadUsers.executor": "Run",
    "JUnit.UserRepositoryTest.testLoadUsersWithEmptyFile.executor": "Run",
    "JUnit.UserRepositoryTest.testLoadUsersWithIOException.executor": "Run",
    "JUnit.UserServiceTest.executor": "Coverage",
    "JUnit.UserServiceTest.testCanUserLogIn_Success.executor": "Run",
    "JUnit.UserServiceTest.testCanUserLogIn_UserNotFound.executor": "Run",
    "JUnit.UserServiceTest.testGetOrderHistory.executor": "Run",
    "JUnit.UserServiceTest.testGetUserRights.executor": "Run",
    "JUnit.UserServiceTest.testGetUserRightsWithNotFoundUser.executor": "Run",
    "JUnit.UserServiceTest.testRegisterCustomerSuccessfulRegistration.executor": "Run",
    "JUnit.UserServiceTest.testRegisterCustomer_UserAlreadyExists.executor": "Run",
    "JUnit.WarehouseTest.executor": "Coverage",
    "JUnit.WarehouseTest.testAddStockInWarehouse.executor": "Run",
    "JUnit.WarehouseTest.testAddStockInWarehouseWithAlreadyDeactivatedProduct.executor": "Run",
    "JUnit.WarehouseTest.testAddStockInWarehouseWithNonExcistingProduct.executor": "Run",
    "JUnit.WarehouseTest.testGetCatalogProduct.executor": "Run",
    "JUnit.WarehouseTest.testGetCatalogProductWithSauce.executor": "Run",
    "JUnit.WarehouseTest.testGetProductCatalogWithNoProduct.executor": "Run",
    "JUnit.WarehouseTest.testGetProductCatalogWithWrongProductName.executor": "Run",
    "JUnit.WarehouseTest.testGetStock.executor": "Debug",
    "JUnit.WarehouseTest.testLoadStock.executor": "Run",
    "JUnit.WarehouseTest.testLoadStockWithEmptyFile.executor": "Run",
    "JUnit.WarehouseTest.testLoadStockWithIOException.executor": "Run",
    "JUnit.WarehouseTest.testReduceStock.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithExactQuantity.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithInsufficientStock.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithNonExcistingProduct.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithOrder.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithOrderWithExactQuantityOfOneProduct.executor": "Run",
    "JUnit.WarehouseTest.testReduceStockWithOrderWithOneInsufficientQuantity.executor": "Debug",
    "JUnit.WarehouseTest.testReduceStockWithOrderWithOneInvalidProduct.executor": "Run",
    "JUnit.WarehouseTest.testSaveStock.executor": "Run",
    "JUnit.WarehouseTest.testSaveStockWithIOException.executor": "Run",
    "JUnit.deliciouspizza in DeliciousPizza.executor": "Coverage",
    "JUnit.java in DeliciousPizza.executor": "Coverage",
    "JUnit.repository in DeliciousPizza.executor": "Coverage",
    "JUnit.service in DeliciousPizza.executor": "Coverage",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Monika/Downloads/checkstyle.xml",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.3402299",
    "settings.editor.selected.configurable": "org.infernus.idea.checkstyle.CheckStyleConfigurable"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f9e54522-3b21-4fe5-911b-c3ac885ffae2" name="Changes" comment="" />
      <created>1738846900938</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738846900938</updated>
    </task>
    <servers />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/DeliciousPizza$UserServiceTest.ic" NAME="UserServiceTest Coverage Results" MODIFIED="1739200966988" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$java_in_DeliciousPizza.ic" NAME="java in DeliciousPizza Coverage Results" MODIFIED="1739374276589" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
    <SUITE FILE_PATH="coverage/DeliciousPizza$repository_in_DeliciousPizza.ic" NAME="repository in DeliciousPizza Coverage Results" MODIFIED="1739192260810" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
    <SUITE FILE_PATH="coverage/DeliciousPizza$Client.ic" NAME="Client Coverage Results" MODIFIED="1739356335493" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.client.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$ProductRepositoryTest.ic" NAME="ProductRepositoryTest Coverage Results" MODIFIED="1738945189270" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$UserRepositoryTest.ic" NAME="UserRepositoryTest Coverage Results" MODIFIED="1739033828383" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$deliciouspizza_in_DeliciousPizza.ic" NAME="deliciouspizza in DeliciousPizza Coverage Results" MODIFIED="1739201097889" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
    <SUITE FILE_PATH="coverage/DeliciousPizza$OrderServiceTest.ic" NAME="OrderServiceTest Coverage Results" MODIFIED="1739200036666" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$ProductRepositoryTest_testLoadInactiveProductsWithEmptyFile.ic" NAME="ProductRepositoryTest.testLoadInactiveProductsWithEmptyFile Coverage Results" MODIFIED="1738849670030" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$OrderRepositoryTest.ic" NAME="OrderRepositoryTest Coverage Results" MODIFIED="1739029682166" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$ProductServiceTest.ic" NAME="ProductServiceTest Coverage Results" MODIFIED="1739195212720" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.service.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$WarehouseTest.ic" NAME="WarehouseTest Coverage Results" MODIFIED="1739116659815" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
  </component>
</project>