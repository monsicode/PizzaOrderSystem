<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f9e54522-3b21-4fe5-911b-c3ac885ffae2" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data-storage/stock.json" beforeDir="false" afterPath="$PROJECT_DIR$/data-storage/stock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/DebugTest.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/Warehouse.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/deliciouspizza/repository/Warehouse.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/OrderRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/OrderRepositoryTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/ProductRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/ProductRepositoryTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/UserRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/UserRepositoryTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/WarehouseTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository/WarehouseTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/DebugTest.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/Warehouse$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/Warehouse$1.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/Warehouse.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/deliciouspizza/repository/Warehouse.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest$1.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest$2.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/OrderRepositoryTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/ProductRepositoryTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/ProductRepositoryTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/UserRepositoryTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/com/deliciouspizza/repository/UserRepositoryTest.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2sfW27PwLBLRGqzib75zUYtNIdh" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;JUnit.OrderRepositoryTest.executor&quot;: &quot;Coverage&quot;,
    &quot;JUnit.OrderRepositoryTest.testAddOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testAddProductToActiveOrderWithInactiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testAddProductToActiveOrderWithInactiveProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testFinalizeOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testFinalizeOrderWithEmptyOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testFinalizeOrderWithInactiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testFinalizeRepeatedOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testFinalizeRepeatedOrderWithNullOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetCountOrderInPeriod.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetCurrentOrderForUserWithInactiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetHistoryOrdersWithEmptyHistory.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetProfitInPeriod.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetTotalPriceOfOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testGetTotalPriceOfOrderWithInactiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testLoadHistoryOrders.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.OrderRepositoryTest.testLoadHistoryOrdersWithException.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.OrderRepositoryTest.testLoadPendingOrdersWithEmptyFile.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testLoadPendingOrdersWithException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testRemoveFromCurrentOrderForUserWithInactiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testRemoveFromCurrentOrderForUserWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testShutdown.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.OrderRepositoryTest.testStartNewOrderWithAlreadyActiveOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testActivateProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testActivateProductWithAlreadyActiveProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testActivateProductWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testDeactivateProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testDeactivateProductWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testFilePathChange.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testGetProductFromActiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testGetProductFromInactiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testGetProductWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIOExceptionDuringLoadActiveProducts.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductRepositoryTest.testIOExceptionDuringLoadInactiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomers.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomersWhenNotInActiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIsItGoodForUnderAgedCustomersWithAlcoholicDrink.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIsProductActive.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testIsProductActiveWithFalseReturn.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testLoadActiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testLoadActiveProductsWithEmptyFile.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.ProductRepositoryTest.testLoadInactiveProducts.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ProductRepositoryTest.testLoadInactiveProductsWithEmptyFile.executor&quot;: &quot;Coverage&quot;,
    &quot;JUnit.ProductRepositoryTest.testSavingProductWithException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.executor&quot;: &quot;Coverage&quot;,
    &quot;JUnit.UserRepositoryTest.testAddToOrderHistory.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testAddToOrderHistoryWithEmployee.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testAddToOrderHistoryWithNonExcistingUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testAddUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetAgeCustomer.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetAgeCustomerWithEmployee.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetAgeCustomerWithNonExcistingUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetOrderHistory.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.UserRepositoryTest.testGetOrderHistoryWithEmployee.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetOrderHistoryWithNonExcistingUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetUserByUsername.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testGetUserByUsernameWithNonExcistingUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testLoadUsers.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testLoadUsersWithEmptyFile.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryTest.testLoadUsersWithIOException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.executor&quot;: &quot;Coverage&quot;,
    &quot;JUnit.WarehouseTest.testAddStockInWarehouse.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testAddStockInWarehouseWithAlreadyDeactivatedProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testAddStockInWarehouseWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testGetCatalogProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testGetCatalogProductWithSauce.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testGetProductCatalogWithNoProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testGetProductCatalogWithWrongProductName.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testGetStock.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.WarehouseTest.testLoadStock.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testLoadStockWithEmptyFile.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testLoadStockWithIOException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStock.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithExactQuantity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithInsufficientStock.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithNonExcistingProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithOrder.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithOrderWithExactQuantityOfOneProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithOrderWithOneInsufficientQuantity.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.WarehouseTest.testReduceStockWithOrderWithOneInvalidProduct.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testSaveStock.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.WarehouseTest.testSaveStockWithIOException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.repository in DeliciousPizza.executor&quot;: &quot;Coverage&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Monika/Downloads/checkstyle.xml&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.3402299&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;org.infernus.idea.checkstyle.CheckStyleConfigurable&quot;
  }
}</component>
  <component name="RunManager" selected="JUnit.repository in DeliciousPizza">
    <configuration name="ProductRepositoryTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="DeliciousPizza" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.deliciouspizza.repository.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.deliciouspizza.repository" />
      <option name="MAIN_CLASS_NAME" value="com.deliciouspizza.repository.ProductRepositoryTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WarehouseTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="DeliciousPizza" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.deliciouspizza.repository.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.deliciouspizza.repository" />
      <option name="MAIN_CLASS_NAME" value="com.deliciouspizza.repository.WarehouseTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WarehouseTest.testGetCatalogProductWithSauce" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="DeliciousPizza" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.deliciouspizza.repository.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.deliciouspizza.repository" />
      <option name="MAIN_CLASS_NAME" value="com.deliciouspizza.repository.WarehouseTest" />
      <option name="METHOD_NAME" value="testGetCatalogProductWithSauce" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WarehouseTest.testGetProductCatalogWithWrongProductName" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="DeliciousPizza" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.deliciouspizza.repository.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.deliciouspizza.repository" />
      <option name="MAIN_CLASS_NAME" value="com.deliciouspizza.repository.WarehouseTest" />
      <option name="METHOD_NAME" value="testGetProductCatalogWithWrongProductName" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="repository in DeliciousPizza" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="DeliciousPizza" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java/com/deliciouspizza/repository" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.repository in DeliciousPizza" />
        <item itemvalue="JUnit.ProductRepositoryTest" />
        <item itemvalue="JUnit.WarehouseTest.testGetProductCatalogWithWrongProductName" />
        <item itemvalue="JUnit.WarehouseTest" />
        <item itemvalue="JUnit.WarehouseTest.testGetCatalogProductWithSauce" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f9e54522-3b21-4fe5-911b-c3ac885ffae2" name="Changes" comment="" />
      <created>1738846900938</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738846900938</updated>
    </task>
    <servers />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/DeliciousPizza$repository_in_DeliciousPizza.ic" NAME="repository in DeliciousPizza Coverage Results" MODIFIED="1739116930396" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
    <SUITE FILE_PATH="coverage/DeliciousPizza$OrderRepositoryTest.ic" NAME="OrderRepositoryTest Coverage Results" MODIFIED="1739029682166" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$ProductRepositoryTest.ic" NAME="ProductRepositoryTest Coverage Results" MODIFIED="1738945189270" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$UserRepositoryTest.ic" NAME="UserRepositoryTest Coverage Results" MODIFIED="1739033828383" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$WarehouseTest.ic" NAME="WarehouseTest Coverage Results" MODIFIED="1739116659815" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/DeliciousPizza$ProductRepositoryTest_testLoadInactiveProductsWithEmptyFile.ic" NAME="ProductRepositoryTest.testLoadInactiveProductsWithEmptyFile Coverage Results" MODIFIED="1738849670030" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com.deliciouspizza.repository.*</FILTER>
    </SUITE>
  </component>
</project>